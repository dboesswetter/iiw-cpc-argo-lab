apiVersion: argoproj.io/v1alpha1
kind: Workflow                  # new type of k8s spec
metadata:
  generateName: run-blender-    # name of the workflow spec
spec:
  entrypoint: start              # invoke the whalesay template
  retryStrategy:
   retryPolicy: OnError
   limit: 10
  templates:
    - name: start
      inputs:
        parameters:
          - name: aws_access_key_id
          - name: aws_secret_access_key
          - name: aws_session_token
          - name: numberofframes
          - name: bucket_name
          - name: blender_file_name
      dag:
        tasks:
          - name: fetchfile
            template: fetchfile
          - name: runblender
            template: runblender-and-upload
            dependencies: [fetchfile]
            withSequence: 
              start: 1
              end: "{{inputs.parameters.numberofframes}}"
              format: "%04d"
            arguments:
              parameters:
                - name: framenumber
                  value: "{{item}}"
                - name: aws_access_key_id
                  value: "{{workflow.parameters.aws_access_key_id}}"
                - name: aws_secret_access_key
                  value: "{{workflow.parameters.aws_secret_access_key}}"
                - name: aws_session_token
                  value: "{{workflow.parameters.aws_session_token}}"
              artifacts:
                - name: blender_file
                  from: "{{tasks.fetchfile.outputs.artifacts.blender_file}}"
          - name: runffpmeg
            template: download-and-runffmpeg
            dependencies: [runblender]
    - name: fetchfile
      inputs:
      outputs:
        artifacts:
          - name: blender_file
            path: /tmp/{{workflow.parameters.blender_file_name}}
      script:
        image: amazon/aws-cli
        command: [bash] 
        source: aws s3 cp s3://{{workflow.parameters.bucket_name}}/{{workflow.parameters.blender_file_name}} /tmp
        env:
          - name: AWS_ACCESS_KEY_ID
            value: "{{workflow.parameters.aws_access_key_id}}"
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{workflow.parameters.aws_secret_access_key}}"
          - name: AWS_SESSION_TOKEN
            value: "{{workflow.parameters.aws_session_token}}"
    - name: runblender-and-upload
      inputs:
        parameters:
          - name: framenumber
        artifacts:
          - name: blender_file
      steps:
        - - name: runblender
            template: runblender
            arguments:
              parameters:
                - name: framenumber
                  value: "{{inputs.parameters.framenumber}}"
              artifacts:
                - name: blender_file
                  from: "{{inputs.artifacts.blender_file}}"
        - - name: upload
            template: upload-file
            arguments:
              parameters:
                - name: framenumber
                  value: "{{inputs.parameters.framenumber}}"
                - name: aws_access_key_id
                  value: "{{workflow.parameters.aws_access_key_id}}"
                - name: aws_secret_access_key
                  value: "{{workflow.parameters.aws_secret_access_key}}"
                - name: aws_session_token
                  value: "{{workflow.parameters.aws_session_token}}"
              artifacts:
                - name: file
                  from: "{{steps.runblender.outputs.artifacts.output_file}}"
    - name: runblender
      inputs:
        parameters:
          - name: framenumber
        artifacts:
          - name: blender_file
            path: /tmp/blender_file
      outputs:
        artifacts:
          - name: output_file
            path: "/tmp/{{inputs.parameters.framenumber}}.png"
      script:
        image: linuxserver/blender
        command: [bash]
        source: |
          blender /tmp/blender_file -b -f "{{inputs.parameters.framenumber}}"
        resources:
          requests:
            memory: 3500M
    - name: download-and-runffmpeg
      steps:
        - - name: download
            template: download-files
            arguments:
              parameters:
                - name: aws_access_key_id
                  value: "{{workflow.parameters.aws_access_key_id}}"
                - name: aws_secret_access_key
                  value: "{{workflow.parameters.aws_secret_access_key}}"
                - name: aws_session_token
                  value: "{{workflow.parameters.aws_session_token}}"
        - - name: runffmpeg
            template: runffmpeg
            arguments:
              artifacts:
                - name: files
                  from: "{{steps.download.outputs.artifacts.files}}"
    - name: runffmpeg
      inputs:
        artifacts:
          - name: files
            path: /tmp/files/
      outputs:
        artifacts:
          - name: result
            path: /tmp/out.mp4
      script:
        image: linuxserver/ffmpeg
        command: [bash]
        source: |
          ffmpeg -i /tmp/files/\%04d.png -r 30 /tmp/out.mp4
    - name: upload-file
      inputs:
        parameters:
          - name: framenumber
        artifacts:
          - name: file
            path: /tmp/file
      script:
        image: amazon/aws-cli
        command: [bash]
        source: |
          aws s3 cp /tmp/file s3://{{workflow.parameters.bucket_name}}/out/{{inputs.parameters.framenumber}}.png
        env:
          - name: AWS_ACCESS_KEY_ID
            value: "{{workflow.parameters.aws_access_key_id}}"
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{workflow.parameters.aws_secret_access_key}}"
          - name: AWS_SESSION_TOKEN
            value: "{{workflow.parameters.aws_session_token}}"
    - name: download-files
      outputs:
        artifacts:
          - name: files
            path: /tmp/files
      script:
        image: amazon/aws-cli
        command: [bash]
        source: |
          mkdir /tmp/files
          aws s3 sync s3://{{workflow.parameters.bucket_name}}/out/ /tmp/files
        env:
          - name: AWS_ACCESS_KEY_ID
            value: "{{workflow.parameters.aws_access_key_id}}"
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{workflow.parameters.aws_secret_access_key}}"
          - name: AWS_SESSION_TOKEN
            value: "{{workflow.parameters.aws_session_token}}"

